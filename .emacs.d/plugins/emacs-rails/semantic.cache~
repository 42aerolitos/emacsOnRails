;; Object semantic.cache
;; SEMANTICDB Tags save file
(semanticdb-project-database "semantic.cache"
  :file "semantic.cache"
  :tables (list 
   (semanticdb-table "rails.el"
    :file "rails.el"
    :pointmax 16798
    :major-mode 'emacs-lisp-mode
    :tokens '(("unless" code nil [1139 1360]) ("eval-when-compile" code nil [1362 1475]) ("sql" include nil nil nil [1477 1491]) ("ansi-color" include nil nil nil [1492 1513]) ("etags" include nil nil nil [1514 1530]) ("find-recursive" include nil nil nil [1531 1556]) ("untabify-file" include nil nil nil [1558 1582]) ("predictive-prog-mode" include nil nil nil [1583 1614]) ("inflections" include nil nil nil [1616 1638]) ("rails-compat" include nil nil nil [1640 1663]) ("rails-project" include nil nil nil [1664 1688]) ("rails-core" include nil nil nil [1690 1711]) ("rails-ruby" include nil nil nil [1712 1733]) ("rails-lib" include nil nil nil [1734 1754]) ("rails-cmd-proxy" include nil nil nil [1756 1782]) ("rails-navigation" include nil nil nil [1783 1810]) ("rails-find" include nil nil nil [1811 1832]) ("rails-scripts" include nil nil nil [1833 1857]) ("rails-rake" include nil nil nil [1858 1879]) ("rails-test" include nil nil nil [1880 1901]) ("rails-ws" include nil nil nil [1902 1921]) ("rails-log" include nil nil nil [1922 1942]) ("rails-ui" include nil nil nil [1943 1962]) ("rails-model-layout" include nil nil nil [1963 1992]) ("rails-controller-layout" include nil nil nil [1993 2027]) ("rails-features" include nil nil nil [2028 2053]) ("defgroup" code nil [2099 2194]) ("rails-api-root" variable nil nil ((user-visible . t)) "*Root of Rails API html documentation. Must be a local directory." nil [2196 2328]) ("rails-use-alternative-browse-url" variable nil nil nil "Indicates an alternative way of loading URLs on Windows.
Try using the normal method before. If URLs invoked by the
program don't end up in the right place, set this option to
true." nil [2330 2597]) ("rails-browse-api-with-w3m" variable nil nil nil "Indicates that the user wants to browse the Rails API using
Emacs w3m browser." nil [2599 2756]) ("rails-tags-command" variable nil "ctags -e -a --Ruby-kinds=-f -o %s -R %s" nil "Command used to generate TAGS in Rails root" nil [2758 2910]) ("rails-ri-command" variable nil "ri" nil "Command used to invoke the ri utility." nil [2912 3020]) ("rails-always-use-text-menus" variable nil nil nil "Force the use of text menus by default." nil [3022 3142]) ("rails-ask-when-reload-tags" variable nil nil nil "Indicates whether the user should confirm reload a TAGS table or not." nil [3144 3293]) ("rails-chm-file" variable nil nil nil "Path to CHM documentation file on Windows, or nil." nil [3295 3412]) ("rails-ruby-command" variable nil "ruby" nil "Ruby preferred command line invocation." nil [3414 3527]) ("rails-layout-template" variable nil "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"
          \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">
<html xmlns=\"http://www.w3.org/1999/xhtml\"
      xml:lang=\"en\" lang=\"en\">
  <head>
    <title></title>
    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />
    <%= stylesheet_link_tag \"default\" %>
  </head>

  <body>
    <%= yield %>
  </body>
</html>" nil "Default html template for new rails layout" nil [3529 4054]) ("rails-version" variable nil "0.5.99.1" nil nil nil [4056 4089]) ("rails-templates-list" variable nil (quote ("erb" "rhtml" "rxml" "rjs" "haml" "liquid")) nil nil nil [4090 4165]) ("rails-use-another-define-key" variable nil nil nil nil nil [4166 4207]) ("rails-primary-switch-func" variable nil nil nil nil nil [4208 4246]) ("rails-secondary-switch-func" variable nil nil nil nil nil [4247 4287]) ("rails-directory<-->types" variable nil (quote ((:controller "app/controllers/") (:layout "app/layouts/") (:view "app/views/") (:observer "app/models/" (lambda (file) (rails-core:observer-p file))) (:mailer "app/models/" (lambda (file) (rails-core:mailer-p file))) (:model "app/models/" (lambda (file) (and (not (rails-core:mailer-p file)) (not (rails-core:observer-p file))))) (:helper "app/helpers/") (:plugin "vendor/plugins/") (:unit-test "test/unit/") (:functional-test "test/functional/") (:fixture "test/fixtures/") (:migration "db/migrate"))) nil "Rails file types -- rails directories map" nil [4289 5076]) ("rails-enviroments" variable nil (quote ("development" "production" "test")) nil nil nil [5078 5141]) ("rails-default-environment" variable nil (first rails-enviroments) nil nil nil [5142 5202]) ("rails-adapters-alist" variable nil (quote (("mysql" . sql-mysql) ("postgresql" . sql-postgres) ("sqlite3" . sql-sqlite))) nil "Sets emacs sql function for rails adapter names." nil [5204 5384]) ("rails-tags-dirs" variable nil (quote ("app" "lib" "test" "db")) nil "List of directories from RAILS_ROOT where ctags works." nil [5386 5496]) ("rails-use-text-menu" function nil nil nil "If t use text menu, popup menu otherwise" nil [5498 5629]) ("rails-svn-status-into-root" function nil nil nil (interactive) nil [5650 5783]) ("rails-search-doc" function nil ("&optional" "item") nil (interactive) nil [5812 6708]) ("rails-create-tags" function nil nil ((user-visible . t)) "Create tags file" nil [6710 7180]) ("rails-apply-for-buffer-type" function nil nil nil (let* ((type (rails-core:buffer-type)) (name (substring (symbol-name type) 1)) (minor-mode-name (format "rails-%s-minor-mode" name)) (minor-mode-abbrev (concat minor-mode-name "-abbrev-table"))) (when (require (intern minor-mode-name) nil t) (when (fboundp (intern minor-mode-name)) (apply (intern minor-mode-name) (list t)) (when (boundp (intern minor-mode-abbrev)) (merge-abbrev-tables (symbol-value (intern minor-mode-abbrev)) local-abbrev-table))))) nil [7182 7798]) ("rails-db-conf" type "struct" ("adapter" "host" "database" "username" "password") nil nil database nil [7844 7909]) ("rails-db-parameters" function nil ("env") nil "Return database parameters for enviroment ENV" nil [7911 8518]) ("rails-database-emacs-func" function nil ("adapter") nil "Return the Emacs function for ADAPTER that, when run, will
+invoke the appropriate database server console." nil [8520 8720]) ("rails-read-enviroment-name" function nil ("&optional" "default") nil "Read Rails enviroment with auto-completion." nil [8722 8913]) ("rails-run-sql" function nil ("&optional" "env") ((user-visible . t)) "Run a SQL process for the current Rails project." nil [8915 9792]) ("rails-has-api-root" function nil nil nil "Test whether `rails-api-root' is configured or not, and offer to configure
it in case it's still empty for the project." nil [9794 11145]) ("rails-browse-api" function nil nil ((user-visible . t)) "Browse Rails API on RAILS-API-ROOT." nil [11147 11383]) ("rails-get-api-entries" function nil ("name" "file" "sexp" "get-file-func") nil "Return all API entries named NAME in file FILE using SEXP to
find matches, and GET-FILE-FUNC to process the matches found." nil [11385 12311]) ("rails-browse-api-class" function nil ("class") nil "Browse the Rails API documentation for CLASS." nil [12313 12656]) ("rails-browse-api-method" function nil ("method") nil "Browse the Rails API documentation for METHOD." nil [12658 13148]) ("rails-browse-api-at-point" function nil nil ((user-visible . t)) "Open the Rails API documentation on the class or method at the current point.
The variable `rails-api-root' must be pointing to a local path
either in your project or elsewhere in the filesystem. The
function will also offer to build the documentation locally if
necessary." nil [13150 13963]) ("define-minor-mode" code nil [13987 14267]) ("add-hook" code nil [14279 15318]) ("add-hook" code nil [15320 15426]) ("add-hook" code nil [15428 15811]) ("add-hook" code nil [15847 15971]) ("haml-mode" function nil nil ((use-visible . t) (prototype . t)) "" nil [15974 16012]) ("setq" code nil [16014 16088]) ("setq" code nil [16089 16163]) ("setq" code nil [16164 16238]) ("setq" code nil [16239 16313]) ("setq" code nil [16314 16388]) ("setq" code nil [16389 16463]) ("setq" code nil [16464 16538]) ("modify-coding-system-alist" code nil [16540 16594]) ("modify-coding-system-alist" code nil [16595 16649]) ("modify-coding-system-alist" code nil [16650 16703]) ("modify-coding-system-alist" code nil [16704 16779]) ("rails" package nil nil nil [16781 16797]))
    )
   )
  )
